{
  "custom": {},
  "params": {
    "rootTagPath": "[default]Tank 1"
  },
  "propConfig": {
    "params.rootTagPath": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 250,
      "width": 125
    }
  },
  "root": {
    "children": [
      {
        "meta": {
          "name": "Vessel"
        },
        "position": {
          "height": 1,
          "width": 1
        },
        "propConfig": {
          "props.displayAgitator": {
            "binding": {
              "config": {
                "fallbackDelay": 2.5,
                "mode": "indirect",
                "references": {
                  "Type": "{/root.custom.tagPaths.Type}"
                },
                "tagPath": "{Type}"
              },
              "transforms": [
                {
                  "code": "\tif value \u003d\u003d \u0027Mixer\u0027:\n\t\tret \u003d True\n\telse:\n\t\tret \u003d False\n\treturn ret",
                  "type": "script"
                }
              ],
              "type": "tag"
            }
          },
          "props.label.text": {
            "binding": {
              "config": {
                "fallbackDelay": 2.5,
                "mode": "expression",
                "tagPath": "{/root.custom.tagPaths.Name}"
              },
              "overlayOptOut": true,
              "type": "tag"
            }
          },
          "props.state": {
            "binding": {
              "config": {
                "expression": "now(5000)"
              },
              "transforms": [
                {
                  "code": "\talarmPath \u003d self.view.params.rootTagPath\n\talarms \u003d self.parent.custom.tankAlarms\n\tif len(alarms) \u003e 0:\n\t\tret \u003d \u0027faulted\u0027\n\telse:\n\t\tret \u003d \u0027default\u0027\t\t\n\t\n\treturn ret",
                  "type": "script"
                }
              ],
              "type": "expr"
            }
          },
          "props.value.value": {
            "binding": {
              "config": {
                "path": "parent.custom.tagValues.Level"
              },
              "overlayOptOut": true,
              "transforms": [
                {
                  "code": "\treturn round(value,1)",
                  "type": "script"
                }
              ],
              "type": "property"
            }
          }
        },
        "props": {
          "bottom": "conical",
          "label": {
            "location": "top",
            "style": {
              "classes": "HighPerformance/SymbolStyles/Component_Label_CenterBold"
            }
          },
          "liquidColor": "#AAAAAA",
          "style": {
            "classes": "label"
          },
          "value": {}
        },
        "type": "ia.symbol.vessel"
      }
    ],
    "custom": {
      "currentTime": {
        "$": [
          "ts",
          192,
          1632262497879
        ],
        "$ts": 1632262497879
      },
      "tagPaths": {}
    },
    "events": {
      "dom": {
        "onClick": {
          "config": {
            "script": "\ttagPath \u003d self.view.params.rootTagPath\n\tview \u003d \u0027Templates/Faceplate/Common/Faceplate Skeleton\u0027\n\tposition \u003d {\u0027width\u0027:350,\u0027height\u0027:250}\n\tcommonNamePath \u003d tagPath + \u0027/General/Common Name\u0027\n\tcommonName \u003d system.tag.read(commonNamePath).value\n\ttitleStr \u003d str(commonName)\n\tparams \u003d {\n\t\t\u0027rootTagPath\u0027:tagPath\n\t}\n\tsystem.perspective.openPopup(id \u003d tagPath,view \u003d view,params \u003d params,title \u003d titleStr,overlayDismiss\u003dTrue,position\u003dposition)"
          },
          "scope": "G",
          "type": "script"
        }
      }
    },
    "meta": {
      "name": "root"
    },
    "position": {
      "x": 0,
      "y": 0
    },
    "propConfig": {
      "custom.tagPaths.Level": {
        "binding": {
          "config": {
            "path": "view.params.rootTagPath"
          },
          "overlayOptOut": true,
          "transforms": [
            {
              "code": "\treturn value + \u0027/Control/Device Status/Level\u0027",
              "type": "script"
            }
          ],
          "type": "property"
        }
      },
      "custom.tagPaths.Name": {
        "binding": {
          "config": {
            "path": "view.params.rootTagPath"
          },
          "overlayOptOut": true,
          "transforms": [
            {
              "code": "\treturn value + \u0027/General/Common Name\u0027",
              "type": "script"
            }
          ],
          "type": "property"
        }
      },
      "custom.tagPaths.Type": {
        "binding": {
          "config": {
            "path": "view.params.rootTagPath"
          },
          "overlayOptOut": true,
          "transforms": [
            {
              "code": "\treturn value + \u0027/General/Type\u0027",
              "type": "script"
            }
          ],
          "type": "property"
        }
      },
      "custom.tagValues": {
        "binding": {
          "config": {
            "path": "this.custom.currentTime"
          },
          "overlayOptOut": true,
          "transforms": [
            {
              "code": "\t\n\treturn templates.getTagValues(value, self.custom.tagPaths)",
              "type": "script"
            }
          ],
          "type": "property"
        }
      },
      "custom.tankAlarms": {
        "binding": {
          "config": {
            "expression": "now(1000)"
          },
          "overlayOptOut": true,
          "transforms": [
            {
              "code": "\t\n\treturn templates.getActiveChildrenAlarms(self.view.params.rootTagPath)",
              "type": "script"
            }
          ],
          "type": "expr"
        }
      }
    },
    "props": {
      "mode": "percent",
      "style": {
        "classes": "Templates/Component"
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "updateCurrentTime",
          "pageScope": true,
          "script": "\t# implement your handler here\n\tself.custom.currentTime \u003d payload[\u0027currentTime\u0027]",
          "sessionScope": false,
          "viewScope": false
        },
        {
          "messageType": "highlightComponent",
          "pageScope": true,
          "script": "\t# implement your handler here\n\tsystem.util.getLogger(\u0027testing\u0027).info(\u0027received message\u0027)\n\tif str(self.view.params.rootTagPath) \u003d\u003d str(payload[\u0027tagPath\u0027]):\n\t\tself.props.style.classes \u003d \u0027Templates/Component Templates/HighlightComponent\u0027",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.coord"
  }
}