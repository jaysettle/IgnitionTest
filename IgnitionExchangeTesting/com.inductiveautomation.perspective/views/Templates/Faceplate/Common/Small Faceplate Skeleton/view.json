{
  "custom": {},
  "params": {
    "rootTagPath": "[default]Pump 1"
  },
  "propConfig": {
    "params.rootTagPath": {
      "paramDirection": "input",
      "persistent": true
    }
  },
  "props": {
    "defaultSize": {
      "height": 150,
      "width": 350
    }
  },
  "root": {
    "children": [
      {
        "children": [
          {
            "children": [
              {
                "events": {
                  "dom": {
                    "onClick": {
                      "config": {
                        "script": "\t\n\tx \u003d round(event.pageX,0) - 10\n\ty \u003d round(event.pageY,0) - 70\n\ttagPath \u003d self.view.params.rootTagPath\n\tview \u003d \u0027Templates/Faceplate/Common/Faceplate Skeleton\u0027\n\tposition \u003d {\u0027width\u0027:350,\u0027height\u0027:450, \u0027top\u0027:y, \u0027left\u0027:x}\n\tcommonNamePath \u003d tagPath + \u0027/General/Common Name\u0027\n\tcommonName \u003d system.tag.read(commonNamePath).value\n\ttitleStr \u003d str(commonName)\n\tparams \u003d {\n\t\t\u0027rootTagPath\u0027:tagPath\n\t}\n\tmodal \u003d True\n\toverlayDismiss \u003d False\n\tsystem.perspective.closePopup(id \u003d tagPath)\n\tsystem.perspective.openPopup(id \u003d tagPath,view \u003d view,params \u003d params,title \u003d titleStr,overlayDismiss\u003dTrue, position\u003dposition, modal \u003d False)"
                      },
                      "scope": "G",
                      "type": "script"
                    }
                  }
                },
                "meta": {
                  "name": "Icon_Expand"
                },
                "position": {
                  "basis": "30px"
                },
                "props": {
                  "color": "#808080",
                  "path": "material/open_in_full",
                  "style": {
                    "classes": "Templates/FaceplateIcon Templates/FaceplateIconUnselected"
                  }
                },
                "type": "ia.display.icon"
              }
            ],
            "meta": {
              "name": "FlexContainer"
            },
            "position": {
              "basis": "86px",
              "grow": 1
            },
            "props": {
              "direction": "column"
            },
            "type": "ia.container.flex"
          },
          {
            "events": {
              "dom": {
                "onClick": {
                  "config": {
                    "script": "\tif self.view.getChild(\"root\").custom.pinned:\n\t\tself.view.getChild(\"root\").custom.pinned \u003d False\n\telse:\n\t\tself.view.getChild(\"root\").custom.pinned \u003d True"
                  },
                  "scope": "G",
                  "type": "script"
                }
              }
            },
            "meta": {
              "name": "Icon_Lock",
              "tooltip": {
                "enabled": true,
                "text": "Pin faceplate when switching between pages"
              }
            },
            "position": {
              "basis": "30px",
              "shrink": 0
            },
            "propConfig": {
              "props.path": {
                "binding": {
                  "config": {
                    "path": "/root.custom.pinned"
                  },
                  "transforms": [
                    {
                      "code": "\tif value:\n\t\tret \u003d \u0027material/lock\u0027\n\telse:\n\t\tret \u003d \u0027material/lock_open\u0027\n\treturn ret",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "color": "#808080",
              "style": {
                "classes": "Templates/FaceplateIcon Templates/FaceplateIconUnselected"
              }
            },
            "type": "ia.display.icon"
          }
        ],
        "meta": {
          "name": "FlexContainer_TabStrip"
        },
        "position": {
          "basis": "40px",
          "shrink": 0
        },
        "props": {
          "direction": "column",
          "justify": "space-between"
        },
        "type": "ia.container.flex"
      },
      {
        "children": [
          {
            "meta": {
              "name": "EmbeddedView_AlarmBanner"
            },
            "position": {
              "basis": "30px",
              "shrink": 0
            },
            "propConfig": {
              "custom.component": {
                "binding": {
                  "config": {
                    "expression": "{/root.custom.component}"
                  },
                  "type": "expr"
                }
              },
              "position.display": {
                "binding": {
                  "config": {
                    "path": "/root.custom.alarms"
                  },
                  "transforms": [
                    {
                      "code": "\tif len(value)\u003e0:\n\t\tret \u003d True\n\telse:\n\t\tret \u003d False\n\treturn ret",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              },
              "props.params.rootTagPath": {
                "binding": {
                  "config": {
                    "path": "view.params.rootTagPath"
                  },
                  "overlayOptOut": true,
                  "type": "property"
                }
              }
            },
            "props": {
              "path": "Templates/Faceplate/Common/Alarm Banner",
              "style": {
                "margin": "3px"
              }
            },
            "type": "ia.display.view"
          },
          {
            "meta": {
              "name": "EmbeddedView_CurrentTab"
            },
            "position": {
              "basis": "320px",
              "grow": 1
            },
            "propConfig": {
              "custom.component": {
                "binding": {
                  "config": {
                    "expression": "{/root.custom.component}"
                  },
                  "type": "expr"
                }
              },
              "props.params.rootTagPath": {
                "binding": {
                  "config": {
                    "path": "view.params.rootTagPath"
                  },
                  "overlayOptOut": true,
                  "type": "property"
                }
              },
              "props.path": {
                "binding": {
                  "config": {
                    "path": "view.params.rootTagPath"
                  },
                  "transforms": [
                    {
                      "code": "\t\n\trootTagPath \u003d self.view.params.rootTagPath\n\t\n\tif rootTagPath \u003d\u003d \u0027\u0027:\n\t\tcomponent \u003d \u0027\u0027\n\telse:\n\t\tconfig \u003d system.tag.getConfiguration(rootTagPath)\n\t\tsplit \u003d config[0][\u0027typeId\u0027].split(\u0027/\u0027)\n\t\tcomponent \u003d split[-1]\n\tviewPath \u003d \u0027Templates/Faceplate/%s Faceplate/Mini_Control\u0027 % (component)\n\n\treturn viewPath",
                      "type": "script"
                    }
                  ],
                  "type": "property"
                }
              }
            },
            "props": {
              "style": {
                "margin": "3px"
              }
            },
            "type": "ia.display.view"
          }
        ],
        "meta": {
          "name": "FlexContainer_Content"
        },
        "position": {
          "basis": "200px",
          "grow": 1
        },
        "props": {
          "direction": "column"
        },
        "type": "ia.container.flex"
      }
    ],
    "custom": {
      "pinned": false
    },
    "meta": {
      "name": "root"
    },
    "propConfig": {
      "custom.alarms": {
        "binding": {
          "config": {
            "expression": "now(5000)"
          },
          "overlayOptOut": true,
          "transforms": [
            {
              "code": "\t\n\treturn templates.getActiveChildrenAlarms(self.view.params.rootTagPath)",
              "type": "script"
            }
          ],
          "type": "expr"
        }
      },
      "custom.component": {
        "binding": {
          "config": {
            "path": "view.params.rootTagPath"
          },
          "overlayOptOut": true,
          "transforms": [
            {
              "code": "\tif value\u003d\u003d\u0027\u0027:\n\t\tret \u003d \u0027\u0027\n\telse:\n\t\tconfig \u003d system.tag.getConfiguration(value)\n\t\tsplit \u003d config[0][\u0027typeId\u0027].split(\u0027/\u0027)\n\t\tret\u003d split[-1]\n\treturn ret",
              "type": "script"
            }
          ],
          "type": "property"
        }
      }
    },
    "scripts": {
      "customMethods": [],
      "extensionFunctions": null,
      "messageHandlers": [
        {
          "messageType": "switchPage",
          "pageScope": true,
          "script": "\t# implement your handler here\n\tif not self.custom.pinned:\n\t\tsystem.perspective.closePopup(id \u003d self.view.params.rootTagPath)",
          "sessionScope": false,
          "viewScope": false
        }
      ]
    },
    "type": "ia.container.flex"
  }
}